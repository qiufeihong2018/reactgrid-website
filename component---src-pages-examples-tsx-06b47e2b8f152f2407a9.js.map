{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/TabContext.js","webpack:///./node_modules/reactstrap/es/TabContent.js","webpack:///./node_modules/reactstrap/es/TabPane.js","webpack:///./content/examples/samplesData.js","webpack:///./src/components/SamplesWrapper.tsx","webpack:///./src/pages/examples.tsx"],"names":["TabContext","createContext","propTypes","tag","activeTab","any","className","string","cssModule","object","_Component","TabContent","props","_this","call","this","state","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","Tag","attributes","Object","keys","classes","createElement","Provider","value","activeTabId","defaultProps","TabPane","tabId","getClasses","active","Consumer","_ref","LinkToDocs","to","children","samplesData","title","icon","enabled","description","header","content","component","SamplesWrapper","activeTabIdx","activeComponent","filter","sample","setActiveTab","idx","setState","tabMenuItems","map","NavItem","key","NavLink","classnames","style","cursor","onClick","sampleTabs","Container","Row","Col","Nav","pills","React","Component","SampleTab","column1","column2","Sample","samples","xs","length","md","item","dangerouslySetInnerHTML","__html","pageQuery","Examples","data","site","siteMetadata","pages","social"],"mappings":"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","file":"component---src-pages-examples-tsx-06b47e2b8f152f2407a9.js","sourcesContent":["import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext =\n/*#__PURE__*/\nReact.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return (\n      /*#__PURE__*/\n      React.createElement(TabContext.Provider, {\n        value: {\n          activeTabId: this.state.activeTab\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Tag, _extends({}, attributes, {\n        className: classes\n      })))\n    );\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(TabContext.Consumer, null, function (_ref) {\n      var activeTabId = _ref.activeTabId;\n      return (\n        /*#__PURE__*/\n        React.createElement(Tag, _extends({}, attributes, {\n          className: getClasses(activeTabId)\n        }))\n      );\n    })\n  );\n}\nTabPane.defaultProps = defaultProps;","import React from 'react';\nimport { Link } from \"gatsby\";\n\n\nconst LinkToDocs = ({ to, children }) => {\n    return (\n        <Link to={to}>\n            {children || <><span className='text-nowrap'>docs <i className=\"fas fa-external-link-alt fa-xs\"></i></span></>}\n        </Link>\n    )\n}\n\nexport const samplesData = [\n    {\n        title: 'Budget planner',\n        icon: 'fas fa-search-dollar fa-3x',\n        enabled: true,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `This budget planner example shows the possibility of calculating values of all aggregation fields \n                    in a reactive way in two axes - for organization or project for some time. See the available functionality:`,\n                    `Only white cells are able to change their value (all the aggregation cells will be updated accordingly)`,\n                    `A new value entered for a certain quarter on a given node will be proportionally distributed into the months within this quarter`,\n                    `Reorder a single row by drag & drop action onto a selected row (you can't reorder multiple rows)`,\n                    `Fold/unfold unit node with <code><kbd>SPACE</kbd></code> key (node cell has to be focused) or click on the chevron icon`,\n                    `Fold/unfold year and/or quarter columns by clicking chevron icon in the top row`,\n                    `Add a new row by clicking 'Add child row' in the context menu option on a selected row or delete it via 'Remove row' option`,\n                ]\n            },\n            {\n                header: `Core features (applied):`,\n                content: [\n                    <>Vertical and horizontal grouping (see the <LinkToDocs to={'/docs/3.1/4-cell-templates/5-ChevronCell/'} />)</>,\n                    <>Custom cell templates (e.g. non editable number cell, see the <LinkToDocs to={'/docs/3.1/5-create-your-own-cell-template/'} />)</>,\n                    <>Context menu (adding and removing row, see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/5-context-menu/'} />)</>,\n                    <>Sticky row and column (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4-sticky/'} />)</>,\n                    <>Row reordering (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/3-column-and-row-reordering/'} />)</>,\n                    <>Range, column and row selection (+ multi selection, see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4a-selections/'} />)</>,\n                    `Fill handle`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS custom styling`,\n                ]\n            }\n        ],\n        className: 'bp-sample',\n        component: 'BPSample'\n    },\n    {\n        title: 'Multi user',\n        icon: 'fas fa-border-all fa-3x',\n        enabled: true,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Includes most features of ReactGrid`,\n                    `Presents multiple data changes in real time `,\n                    `Provides additional actions in context menu (removing rows or columns)`,\n                ]\n            },\n            {\n                header: `Core features (applied):`,\n                content: [\n                    <>Highlights (see the <LinkToDocs to={'/docs/3.1/4-cell-templates/5-GroupCell/'} />)</>,\n                    <>Custom cell templates (e.g. flag icon, see the <LinkToDocs to={'/docs/3.1/5-create-your-own-cell-template/'} />)</>,\n                    <>Sticky row and column (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4-sticky/'} />)</>,\n                    <>Column resize (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/2-column-resizing/'} />)</>,\n                    <>Row and column reordering (see the&nbsp;<LinkToDocs to={'/docs/3.1/2-implementing-core-features/3-column-and-row-reordering/'} />)</>,\n                    <>Range, column and row selection (+ multi selection, see the&nbsp;<LinkToDocs to={'/docs/3.1/2-implementing-core-features/4a-selections/'} />)</>,\n                    <>Context menu (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/5-context-menu/'} />)</>,\n                    `Fill handle`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS custom styling`,\n                ]\n            }\n        ],\n        className: 'datagrid-sample',\n        component: 'DatagridSample'\n    },\n    {\n        title: 'Athletes\\' exercises',\n        icon: 'fas fa-border-all fa-3x',\n        enabled: true,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Implements most ReactGrid features in a simple way`,\n                    `Calculates the athlete's points in the real time`,\n                    `Built-in Chevron Cell allows you to collapse the excercise's category\n                        by pressing on the chevron on pressing space`,\n                ]\n            },\n            {\n                header: `Core features (applied):`,\n                content: [\n                    <>Sticky row and column (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4-sticky/'} />)</>,\n                    <>Range selection (+ multi selection, see the&nbsp;<LinkToDocs to={'/docs/3.1/2-implementing-core-features/4a-selections/'} />)</>,\n                    <>Sticky row and column (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4-sticky/'} />)</>,\n                    <>Custom cell templates (see the <LinkToDocs to={'/docs/3.1/5-create-your-own-cell-template/'} />)</>,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS custom styling`,\n                ]\n            }\n        ],\n        className: 'exercises-sample',\n        component: 'ExcercisesDataSample'\n    },\n    {\n        title: 'Workhours',\n        icon: 'fas fa-border-all fa-3x',\n        enabled: true,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Workhours sample ReactGrid implementation allows user to add new records by editing the last blank row`,\n                    `It is possible to render every row in various ways, ReactGrid empowers the user to fully configure each cell independently`,\n                    `The simple configurator shows how easily you can style your table`,\n                    `Sample contains custom written dropdown cell`,\n                    `The header row and the blank row are sticky, so you can always see the title of the column and you're able to add new records`,\n                ]\n            },\n            {\n                header: `Core features (applied):`,\n                content: [\n                    <>Range selection (+ multi selection, see the&nbsp;<LinkToDocs to={'/docs/3.1/2-implementing-core-features/4a-selections/'} />)</>,\n                    <>Sticky row and column (see the <LinkToDocs to={'/docs/3.1/2-implementing-core-features/4-sticky/'} />)</>,\n                    <>Custom cell templates (see the <LinkToDocs to={'/docs/3.1/5-create-your-own-cell-template/'} />)</>,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS custom styling`,\n                ]\n            }\n        ],\n        className: 'workhours-sample',\n        component: 'WorkhoursSample'\n    },\n    {\n        title: 'Cryptocurrency Market',\n        icon: 'fab fa-bitcoin fa-3x',\n        enabled: false,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Filling grid with data from 3rd party API`,\n                    `Continuosly pooling for changes and presenting them`,\n                ]\n            },\n            {\n                header: `Applied core features:`,\n                content: [\n                    `Freezed first top row`,\n                    `Area, column and row selection (+ multi selection)`,\n                    `Custom cell template`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS styling`,\n                ]\n            }\n        ],\n        className: 'cryptocurrency-market-sample',\n        component: 'CryptocurrencyMarketSample'\n    },\n    {\n        title: 'Rate cell',\n        icon: 'far fa-lightbulb fa-3x',\n        enabled: false,\n        description: 'Short description of demo content',\n        className: 'rate-cell-sample',\n        component: 'RateCellSample'\n    },\n    {\n        title: 'Resize columns',\n        icon: 'fas fa-arrows-alt-h fa-3x',\n        enabled: false,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Changing width of column`,\n                    `Disabling this feature for each column`,\n                    `Handling <code>onColumnResize()</code> event`,\n                ]\n            },\n            {\n                header: `Applied core features:`,\n                content: [\n                    `Column resize`,\n                    `Area selection`,\n                    `Custom cell templates (rate and flag cell)`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS styling`,\n                ]\n            }\n        ],\n        className: 'resize-column-sample',\n        component: 'ResizeColumnSample'\n    },\n    {\n        title: 'Row/columns reorder',\n        icon: 'fas fa-arrows-alt fa-3x',\n        enabled: false,\n        description: [\n            {\n                header: `Usage:`,\n                content: [\n                    `Press <code>ctlr</code> key and select columns/rows`,\n                    `Drag column/rows do desired destination`,\n                ]\n            },\n            {\n                header: `Applied core features:`,\n                content: [\n                    `Column reorder`,\n                    `Row reorder`,\n                    `Area selection`,\n                    `Custom cell templates (rate and flag cell)`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS styling`,\n                ]\n            }\n        ],\n        className: 'column-reorder-sample',\n        component: 'ColumnReorderSample'\n    },\n    {\n        title: 'Context menu',\n        icon: 'far fa-comment-alt fa-3x',\n        enabled: false,\n        description: [\n            {\n                header: `Usage:`,\n                content: [\n                    `Press <code>ctlr</code> key and select columns/rows`,\n                    `Drag column/rows do desired destination`,\n                ]\n            },\n            {\n                header: `Applied core features:`,\n                content: [\n                    `Column reorder`,\n                    `Row reorder`,\n                    `Area selection`,\n                    `Custom cell templates (rate and flag cell)`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS styling`,\n                ]\n            }\n        ],\n        className: 'context-menu-sample',\n        component: 'ContextMenuSample'\n    },\n    {\n        title: 'Group data',\n        icon: 'fa fa-stream fa-3x',\n        enabled: false,\n        description: [\n            {\n                header: `Capabilities:`,\n                content: [\n                    `Application of Group cell template that contains informations about single node`,\n                    `Toggling node with <code><kbd>SPACE</kbd></code> key or click on chevron`,\n                ]\n            },\n            {\n                header: `Applied core features:`,\n                content: [\n                    `Freezed top row and left column`,\n                    `Area, column and row selection (+ multi selection)`,\n                    `Copy/cut/paste`,\n                    `Touch capability`,\n                    `SASS styling`,\n                ]\n            }\n        ],\n        className: 'group-cell-sample',\n        component: 'GroupCellSample'\n    },\n];","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  Container,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport { samplesData } from '../../content/examples/samplesData';\nimport * as samples from '../samples';\n\nclass SamplesWrapper extends React.Component {\n  state = {\n    activeTabIdx: 0,\n    activeComponent: samplesData.filter(sample => sample.enabled)[0].component,\n  };\n  setActiveTab = idx => {\n    if (this.state.activeTabIdx !== idx) {\n      this.setState({\n        activeTabIdx: idx,\n        activeComponent: samplesData.filter(sample => sample.enabled)[idx].component\n      });\n    }\n  }\n\n  render() {\n    const tabMenuItems = samplesData.filter(sample => sample.enabled).map((sample, idx) =>\n      <NavItem key={idx} className=\"pb-3\">\n        <NavLink className={classnames({ active: this.state.activeTabIdx === idx, 'h-100 d-flex flex-column justify-content-center': true })}\n          style={{ cursor: 'pointer' }} onClick={() => { this.setActiveTab(idx) }}>\n          {sample.title}\n        </NavLink>\n      </NavItem>\n    );\n    const sampleTabs = samplesData.filter(sample => sample.enabled).map((sample, idx) =>\n      <SampleTab\n        key={idx}\n        tabId={idx}\n        title={sample.title}\n        description={sample.description}\n        className={sample.className}\n        component={this.state.activeComponent}\n      />\n    );\n\n    return (\n      <Container className=\"section  px-3\">\n        <Row>\n          <Col>\n            <div className=\"space-50\"></div>\n            <Nav pills className={`justify-content-center nav-pills-icons`}  >\n              {tabMenuItems}\n              <div className=\"space-50\"></div>\n              <TabContent activeTab={this.state.activeTabIdx} className=\"example-tabs-content w-100\">\n                {sampleTabs}\n              </TabContent>\n            </Nav>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nconst SampleTab = ({ tabId, title, description, component, className }) => {\n  const [column1, column2] = description;\n  const Sample = samples[component];\n  return (\n    <TabPane tabId={tabId}>\n      <Row>\n        <Col xs=\"12\" className={className}>\n          <div className={tabId === 3 ? \"sample-wrapper-workhours\" : \"sample-wrapper\"}>\n            <Sample />\n          </div>\n          <div className=\"pt-5\">\n            {description.length === 2 ?\n              <Row>\n                <Col md=\"6\" className=\"pb-4\">\n                  <h3>{column1.header}</h3>\n                  <ul className=\"\">\n                    {column1.content.map((item, idx) => <li key={idx} className=\"pb-3 text-left\" dangerouslySetInnerHTML={{ __html: item }}></li>)}\n                  </ul>\n                </Col>\n                <Col md=\"6\">\n                  <h3>{column2.header}</h3>\n                  <ul className=\"\">\n                    {column2.content.map((item, idx) => {\n                      return <li key={idx} className=\"pb-2 text-left\">\n                        {/* {<i className=\"fas fa-check pr-1 text-primary\"></i>}  */}\n                        {item}</li>\n                    })}\n                  </ul>\n                </Col>\n              </Row>\n              : <p dangerouslySetInnerHTML={{ __html: description }}></p>}\n          </div>\n        </Col>\n      </Row>\n    </TabPane>\n  )\n}\n\nexport default SamplesWrapper;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport SamplesWrapper from \"../components/SamplesWrapper\";\n\n\nconst Examples = ({ data }) => {\n  const { title, description, pages, social } = data.site.siteMetadata;\n  return (\n    <Layout pages={pages} social={social} description={description} title={title}>\n      <SEO title={'Examples'} />\n      <SamplesWrapper />\n    </Layout>\n  )\n}\n\nexport default Examples;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        pages {\n          description\n          id\n          route\n          title\n          active\n        }\n        social {\n          description\n          fontAwesomeIcon\n          title\n          url\n          active\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}