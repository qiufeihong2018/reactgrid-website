{"version":3,"sources":["webpack:///./src/assets/img/sample.png","webpack:///./node_modules/reactstrap/es/Card.js","webpack:///./src/components/GithubStarcounter.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/assets/video/sample.mp4"],"names":["module","exports","Card","props","className","cssModule","color","body","inverse","outline","Tag","tag","innerRef","attributes","classes","createElement","ref","defaultProps","GithubStarcounter","githubUrl","useState","starsCount","setStarsCount","useEffect","fetch","then","res","json","stargazers_count","href","rel","target","blocks","title","caption","Index","componentDidMount","document","classList","add","componentWillUnmount","remove","render","this","data","site","siteMetadata","description","pages","social","githubSocial","find","bookmarkTitlePrefix","bookmarkTitleSuffix","Container","Row","Col","md","lg","style","gap","url","Button","type","fontSize","controls","autoPlay","loop","poster","SamplePoster","maxWidth","width","boxShadow","src","Video","kind","map","block","idx","xs","height","key","React","Component"],"mappings":"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","file":"component---src-pages-index-tsx-c6af11441c60e9ee36b0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/sample-19df1a5c213589216795c70ba2794aad.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { useEffect, useState } from \"react\"\r\n\r\ntype GithubStarcounterProps = { githubUrl: string }\r\n\r\nexport const GithubStarcounter: React.FC<GithubStarcounterProps> = ({\r\n  githubUrl,\r\n}) => {\r\n  const [starsCount, setStarsCount] = useState(null)\r\n  useEffect(() => {\r\n    fetch(`https://api.github.com/repos/silevis/reactgrid`)\r\n      .then((res) => res.json())\r\n      .then((res) => setStarsCount(res.stargazers_count ?? null))\r\n  })\r\n\r\n  if (!starsCount) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <a\r\n      className=\"github-starcounter\"\r\n      href={githubUrl}\r\n      rel=\"noopener noreferrer\"\r\n      target=\"_blank\"\r\n    >\r\n      <i className=\"fab fa-github\" />\r\n      <span>Stars</span> {starsCount}\r\n    </a>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql, PageProps } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Container, Row, Col, Button, Card } from \"reactstrap\"\r\nimport SamplePoster from \"../assets/img/sample.png\"\r\nimport Video from \"../assets/video/sample.mp4\"\r\nimport { GithubStarcounter } from \"../components/GithubStarcounter\"\r\n\r\nconst blocks = [\r\n  {\r\n    title: \"Place any cell anywhere\",\r\n    caption:\r\n      \"ReactGrid is fully customizable and extensible. You can literally place any cell type anywhere in the grid\",\r\n  },\r\n  {\r\n    title: \"Optimized for touch devices\",\r\n    caption:\r\n      \"ReactGrid gives the same experience to you no matter if you work on desktop or mobile devices\",\r\n  },\r\n  {\r\n    title: \"Open sourced and MIT licensed\",\r\n    caption:\r\n      \"ReactGrid is free for personal and commercial use under the MIT license\",\r\n  },\r\n]\r\n\r\nclass Index extends React.Component<PageProps<any>, {}> {\r\n  componentDidMount() {\r\n    document.body.classList.add(\"reset-page\")\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"reset-page\")\r\n  }\r\n  render() {\r\n    const { data } = this.props\r\n    const { title, description, pages, social } = data.site.siteMetadata\r\n    const githubSocial = social.find((social) => social.title === \"Github\")\r\n    // const demoPage = pages.find(page => page.id === 'examples');\r\n    // const docsVersion = docsVersions.find(version => versions.active);\r\n    // const docsPage = pages.find(page => page.id === 'docs');\r\n    // const usps = data.allUspsYaml.edges;\r\n    // const npmSocial = social.find(social => social.title === 'npm');\r\n\r\n    return (\r\n      <Layout\r\n        pages={pages}\r\n        social={social}\r\n        description={description}\r\n        title={title}\r\n      >\r\n        <SEO\r\n          title={title}\r\n          bookmarkTitlePrefix={title}\r\n          bookmarkTitleSuffix={`Spreadsheet experience for your React app`}\r\n          description={`ReactGrid is a component for displaying and editing data in a spreadsheet-like way. Our Community version is free and open source, or you can take a 1 month trial of ReactGrid PRO.`}\r\n        />\r\n        <div className=\"wrapper\" ref=\"wrapper\">\r\n          <div className=\"d-none d-md-block space-50\"></div>\r\n          <Container className=\"pb-5\">\r\n            <Row>\r\n              <Col\r\n                className=\"mr-auto text-left align-items-center\"\r\n                md=\"12\"\r\n                lg=\"7\"\r\n              >\r\n                <h1 className=\"title display-1 mb-5 text-primary page-title\">\r\n                  Spreadsheet experience for your React app.\r\n                </h1>\r\n\r\n                <p className=\"em-xxs font-weight-light pb-3\">\r\n                  ReactGrid is an open-source React component for displaying and\r\n                  editing data in a spreadsheet-like way.\r\n                </p>\r\n\r\n                <div\r\n                  className=\"d-flex align-items-center flex-wrap\"\r\n                  style={{ gap: \"1rem\" }}\r\n                >\r\n                  <a href={githubSocial.url} target=\"_blank\">\r\n                    <Button\r\n                      type=\"button\"\r\n                      color=\"primary\"\r\n                      className=\"px-5 py-3\"\r\n                      style={{ fontSize: \"1.3em\" }}\r\n                    >\r\n                      Check on Github\r\n                    </Button>\r\n                  </a>\r\n\r\n                  <GithubStarcounter githubUrl={githubSocial.url} />\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                className=\"ml-auto mt-5 mt-ml-0 d-flex align-items-center justify-content-center\"\r\n                md=\"12\"\r\n                lg=\"5\"\r\n              >\r\n                <video\r\n                  controls\r\n                  autoPlay\r\n                  loop\r\n                  poster={SamplePoster}\r\n                  style={{\r\n                    maxWidth: \"500px\",\r\n                    width: \"100%\",\r\n                    boxShadow: \"#787878 0px 0px 10px -3px\",\r\n                  }}\r\n                >\r\n                  <source src={Video} type=\"video/mp4\" />\r\n                  <track kind=\"captions\" />\r\n                </video>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        <Container>\r\n          <Row className=\"pb-5\">\r\n            {blocks.map((block, idx) => (\r\n              <Col\r\n                xs=\"12\"\r\n                md=\"4\"\r\n                style={{ gap: \"2rem\" }}\r\n                className=\"d-flex flex-column\"\r\n              >\r\n                <Card\r\n                  className=\"p-3 bg-primary-light\"\r\n                  style={{ height: \"100%\" }}\r\n                  key={idx}\r\n                >\r\n                  <h4 className=\"mb-4\">{block.title}</h4>\r\n\r\n                  <p className=\"pb-3 mb-1\">{block.caption}</p>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\n/* const USP = ({ number, header, description, features, graphics }) => {\r\n  return (\r\n    <Col md=\"12\" className=\"py-md-5\">\r\n      <Row className=\"d-flex flex-column flex-md-row text-center text-md-left align-items-center\">\r\n        <Col md=\"2\" lg=\"2\">\r\n          <h4 className=\"text-muted display-1 text-center text-md-right text-bold pb-4 mb-md-0 pb-md-0\" style={{ fontSize: '6em' }}>{number}</h4>\r\n        </Col>\r\n        <Col md=\"4\" lg=\"4\">\r\n          {graphics && <div style={{ fontSize: '1em' }} className=\"d-flex align-items-center justify-content-center pb-5 pb-md-0\" dangerouslySetInnerHTML={{ __html: graphics }}>\r\n          </div>}\r\n        </Col>\r\n        <Col>\r\n          <h3>{header}</h3>\r\n          <p className=\"description\">{description}</p>\r\n          {features && <ul className=\"list-style-none text-left pl-0 \">\r\n            {features.map(item => <li key={item} className=\"d-flex flex-row\"><i className=\"tim-icons icon-check-2 text-success pr-2 pt-1\"></i>{item}</li>)}\r\n          </ul>}\r\n        </Col>\r\n      </Row>\r\n      <hr className=\"line-primary mx-auto d-md-none\" />\r\n    </Col>\r\n  )\r\n} */\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      ...SiteMetadata\r\n    }\r\n    allUspsYaml {\r\n      edges {\r\n        node {\r\n          number\r\n          header\r\n          features\r\n          description\r\n          graphics\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","module.exports = __webpack_public_path__ + \"static/sample-01bcd7bc9a8a62ca7012cd9e73609de9.mp4\";"],"sourceRoot":""}