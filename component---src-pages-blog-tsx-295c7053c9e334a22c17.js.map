{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/CardBody.js","webpack:///./src/components/Header.tsx","webpack:///./node_modules/reactstrap/es/CardTitle.js","webpack:///./src/components/Blog.jsx","webpack:///./src/pages/blog.tsx","webpack:///./node_modules/reactstrap/es/Card.js","webpack:///./src/assets/img/ReactGrid-illustration05.png"],"names":["CardBody","props","className","cssModule","innerRef","Tag","tag","attributes","classes","createElement","ref","defaultProps","Header","style","backgroundImage","bg","filter","Container","Row","marginTop","Col","md","xs","children","BlogPost","node","linkUrl","blogRoute","fields","slug","Card","lg","to","sizes","frontmatter","thumbnail","childImageSharp","title","excerpt","authorImg","top","author","date","BlogView","posts","blogPosts","map","key","pageQuery","Blog","data","site","siteMetadata","description","pages","social","allMdx","edges","blogPageRoute","find","page","id","route","color","body","inverse","outline","module","exports"],"mappings":"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","file":"component---src-pages-blog-tsx-295c7053c9e334a22c17.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tag, _extends({}, attributes, {\n      className: classes,\n      ref: innerRef\n    }))\n  );\n};\n\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import React from 'react';\n\nimport {\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport bg from \"../assets/img/ReactGrid-illustration05.png\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"blog-page-header header-medium\">\n      <div\n        className=\"page-header-image\"\n        style={{ backgroundImage: `url(${bg})`, filter: 'blur(15px)' }}\n      />\n      <Container>\n        <Row className=\"text-left\" style={{ marginTop: 66 }}> {/*  66- height if navbar */}\n          <Col md=\"6\" xs=\"12\">\n            <h1 className=\"display-2\">Latest blogposts</h1>\n            <p className=\"display-4\">Read our newsfeed</p>\n            {props.children}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Header;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }))\n  );\n};\n\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby';\n\nconst BlogView = ({ posts, blogRoute }) => {\n  const blogPosts = posts?.map(({ node }) => {\n    return <BlogPost key={node.fields.slug} node={node} blogRoute={blogRoute} />\n  });\n  return (\n    <section className=\"section\">\n      <Container>\n        <Row>\n          <Col className=\"ml-auto mr-auto\" md=\"10\">\n            {blogPosts}\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nconst BlogPost = ({ node, blogRoute }) => {\n  const linkUrl = blogRoute + node.fields.slug;\n  return (\n    <Card className=\"card-blog card-plain blog-horizontal my-5\">\n      <Row>\n        <Col lg=\"4\">\n          <div className=\"card-image h-100 img-raised\">\n            <Link to={linkUrl} className=\"h-100\">\n              <Img sizes={node.frontmatter.thumbnail.childImageSharp.sizes} className=\"img rounded h-100\" />\n            </Link>\n          </div>\n        </Col>\n        <Col lg=\"8\">\n          <CardBody>\n            <CardTitle tag=\"h3\">\n              <Link to={linkUrl}>{node.frontmatter.title}</Link>\n            </CardTitle>\n            <p className=\"card-description text-muted mb-0\">\n              {node.excerpt || ''}{\" \"}\n              <Link to={linkUrl}>read more</Link>\n            </p>\n            <div className=\"author\">\n              <Img sizes={node.frontmatter.authorImg.childImageSharp.sizes} className=\"avatar img-raised\" />\n              <div className=\"text\" style={{ top: '-42px' }}>\n                <span className=\"text-muted\">Written by {node.frontmatter.author}</span>\n                <div className=\"meta text-black\">{node.frontmatter.date}</div>\n              </div>\n            </div>\n          </CardBody>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default BlogView;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Header from \"../components/Header\";\nimport BlogView from \"../components/Blog\";\n\n\nconst Blog = (props) => {\n  const { data } = props;\n  const { title, description, pages, social } = data.site.siteMetadata;\n  const posts = data.allMdx.edges;\n  const blogPage = pages.find(page => page.id === 'blog');\n  const blogPageRoute = blogPage.route;\n\n  return (\n    <Layout pages={pages} social={social} description={description} title={'Blog'}>\n      <SEO title={'Blog'} />\n      <Header />\n      <BlogView posts={posts} blogRoute={blogPageRoute} />\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query BlogPostsQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        pages {\n          description\n          id\n          route\n          title\n          active\n        }\n        social {\n          description\n          fontAwesomeIcon\n          title\n          url\n          active\n        }\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC },\n      filter: {frontmatter: {posttype: {eq: \"blog\"}, published: {eq: true}}}\n      ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            author\n            canonicalUrl\n            date(formatString: \"DD MMMM YYYY\")\n            thumbnail {\n              childImageSharp {\n                sizes(maxWidth: 900) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            authorImg {\n              childImageSharp {\n                sizes(maxWidth: 120) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tag, _extends({}, attributes, {\n      className: classes,\n      ref: innerRef\n    }))\n  );\n};\n\nCard.defaultProps = defaultProps;\nexport default Card;","module.exports = __webpack_public_path__ + \"static/ReactGrid-illustration05-99d30443a8b291bd852299c55e030400.png\";"],"sourceRoot":""}